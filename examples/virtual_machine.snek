// A simple virtual machine with only three instructions.

let ins = {
    // Pushes `value` onto the stack.
    Push: func(value) {
        return {
            name: "push",
            value: value
        };
    },
    // Pops two values from the stack, adds them and pushes result back onto the stack.
    Add: func() {
        return {
            name: "add"
        };
    },
    // Pops two values from the stack, substracts one from the other and pushes reult back onto the stack.
    Sub: func() {
        return {
            name: "sub"
        };
    }
};

let eval = func(code) {
    let stack = [];

    for let i in 0...code.length() {
        let instruction = code[i];

        when instruction.name {
            "push" => {
                stack.push(instruction.value); 
            }
            "add" => {
                let right = stack.pop();
                let left = stack.pop();

                stack.push(left + right);  
            }
            "sub" => {
                let right = stack.pop();
                let left = stack.pop();

                stack.push(left - right);    
            }
        }
    }

    Sys.println(stack[0]);
};


// Evaluates to `3`.
let code = [
    ins.Push(2),
    ins.Push(3),
    ins.Add(),
    ins.Push(2),
    ins.Sub()
];

eval(code);