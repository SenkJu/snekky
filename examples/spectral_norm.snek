let a = func(i, j) {
    return 1.0 / ((i + j) * (i + j + 1) / 2 + i + 1);
};

let au = func(u, v) {
    mut i = 0;

    while i < u.length() {
        mut t = 0.0;
        mut j = 0;

        while j < u.length() {
            t = t + a(i, j) * u[j];

            j = j + 1;
        } 

        v[i] = t;
        i = i + 1;
    }
};

let atu = func(u, v) {
    mut i = 0;

    while i < u.length() {
        mut t = 0.0;
        mut j = 0;

        while j < u.length() {
            t = t + a(j, i) * u[j];

            j = j + 1;
        } 

        v[i] = t;
        i = i + 1;
    }
};

let atau = func(u, v, w) {
    au(u,w);
    atu(w,v);
};

let spectralnorm = func(n) {
    mut i = 0;
    mut u = [];
    mut v = [];
    mut w = [];
    
    mut vv = 0.0;
    mut vBv = 0.0;

    while i < n {
        u.push(1);
        v.push(0);
        w.push(0);

        i = i + 1;
    }

    i = 0;

    while i < 10 {
        atau(u, v, w);
        atau(v, u, w);

        i = i + 1;   
    }

    i = 0;

    while i < n {
        vBv = vBv + u[i] * v[i];
        vv = vv + v[i] * v[i];

        i = i + 1;
    }

    return Math.sqrt(vBv / vv);
};

Sys.println(spectralnorm(5));